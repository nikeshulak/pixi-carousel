{"version":3,"sources":["Circle.js","Director.js","Slide.js","SlideManagerBase.js","SlideManager.js"],"names":["Circle","options","this","radius","position","x","y","color","color_active","fillAlpha","fillAlpha_active","Director","width","height","now","dt","then","Date","WIDTH","HEIGHT","Slide","img_src","img","width_cached","height_cached","anchor","cached_position","temp_position","SlideManagerBase","call","SLIDE_DURATION","slide_duration","SLIDE_PERCENT_Y","slide_percent_y","CIRCLE_COLOR","indicator_color","CIRCLE_COLOR_ACTIVE","indicator_color_active","CIRCLE_FILLALPHA","indicator_fillAlpha","CIRCLE_FILLALPHA_ACTIVE","indicator_fillAlpha_active","CIRCLE_RADIUS","indicator_radius","CIRCLE_MARGIN","indicator_margin","CIRCLE_PERCENT_Y","indicator_percent_y","BKG_COLOR","bkg_color","scale","SCALES","FIT","has_indicators","speed","is_accelerated","initial_speed","acceleration","is_auto_slide","interval","zoom_ratio","zoom_interval","states","still","duration","sliding_left","sliding_right","zoomming_in","zoomming_out","inspecting","state","state_time","slides","slide_count","indicators","is_position_adjusted","onInit","onSlideBegin","onSlideEnd","SlideManager","textures","sprites","graphics","PIXI","Graphics","stage","Container","renderer","autoDetectRenderer","view","backgroundColor","hammertime","Hammer","get","set","direction","DIRECTION_HORIZONTAL","threshold","prototype","animate","requestAnimationFrame","bind","updateAndRender","update","render","cache_position","restoreCachedPosition","saveTempPosition","cache_size","Object","create","getZoomedLength","length_cached","Math","log","sqrt","zoomIn","slide","getActiveSlide","zoomOut","slideLeft","active_slide","offset","i","adjustCircles","updateSliding","adjustPosition","sign","delta_s","pow","getSpeed","length","reduce","s1","s2","abs","getActiveIndex","indexOf","active_index","len","left_slide","right_slide","cache_slide_positions","slideRight","panTo","startAutoSlide","stopAutoSlide","setSlidesAndStart","img_srcs","setSlides","init","push","left_indicator_x","STRETCH","aspRatio","CROP","indicator","renderIndicators","sl","sp","clear","cir","beginFill","drawCircle","endFill","basetex","BaseTexture","tex","Texture","fromImage","Sprite","addChild","enableSwipe","on","ev","enableZoom","DIRECTION_ALL","preventDefault","deltaX","deltaY"],"mappings":"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","file":"pixi-carousel.min.js","sourcesContent":["function Circle(options) {\n  options = options || {};\n  this.radius = options.radius || 5;\n  this.position = options.position || {x: 0, y: 0};\n  this.color =  options.color || 0x000000;\n  this.color_active =  options.color_active || 0x000000;\n  this.fillAlpha =  options.fillAlpha || 0.9;\n  this.fillAlpha_active =  options.fillAlpha_active || 0.5;\n}","function Director(width, height, options) {\n  this.now;\n  this.dt;\n  this.then = Date.now();\n  \n  options = options || {};\n  this.WIDTH = width || 640;\n  this.HEIGHT = height || 480;\n}\n\nDirector.prototype.animate = function() {\n  // don't override!\n  this.now = Date.now();\n  this.dt = this.now - this.then;\n\n  requestAnimationFrame(this.animate.bind(this));\n  this.updateAndRender(this.dt);\n  \n  this.then = this.now;\n};\n\nDirector.prototype.updateAndRender = function(dt) {\n  // must override!\n  this.update(dt);\n  this.render();\n};\n\nDirector.prototype.update = function(dt) {\n  // must override!\n};\n\nDirector.prototype.render = function() {\n  // must override!\n};\n\n","function Slide(width, height, img_src, img) {\n  this.width = width || 640;\n  this.height = height || 480;\n  this.width_cached = this.width;\n  this.height_cached = this.height;\n  this.height = height;\n  this.img_src = img_src;\n  this.img = img || null;\n\n  this.anchor = {x: 0.5, y: 0.5};\n  this.position = {x: 0, y: 0};\n  this.cached_position = {x: 0, y: 0};\n  this.temp_position = {x: 0, y: 0};\n}\n\nSlide.prototype.cache_position = function() {\n  this.cached_position.x = this.position.x;\n  this.cached_position.y = this.position.y;\n};\n\nSlide.prototype.restoreCachedPosition = function() {\n  this.position.x = this.cached_position.x;\n  this.position.y = this.cached_position.y;\n};\n\nSlide.prototype.saveTempPosition = function() {\n  this.temp_position.x = this.position.x;\n  this.temp_position.y = this.position.y;\n};\n\nSlide.prototype.cache_size = function() {\n  this.width_cached = this.width;\n  this.height_cached = this.height;\n};\n","SlideManagerBase.prototype = Object.create(Director.prototype);\n\nfunction SlideManagerBase(width, height, options) {\n  Director.call(this, width, height, options);\n  options = options || {};\n  this.SLIDE_DURATION = options.slide_duration || 300;\n  this.SLIDE_PERCENT_Y = options.slide_percent_y || 0.5;\n  // SLIDE_PERCENT_Y only effect when scale is CROP\n  this.CIRCLE_COLOR = options.indicator_color || 0x000000;\n  this.CIRCLE_COLOR_ACTIVE = options.indicator_color_active || 0x000000;\n  this.CIRCLE_FILLALPHA = options.indicator_fillAlpha || 0.9;\n  this.CIRCLE_FILLALPHA_ACTIVE = options.indicator_fillAlpha_active || 0.5;\n  this.CIRCLE_RADIUS = options.indicator_radius || 8;\n  this.CIRCLE_MARGIN = options.indicator_margin || 25;\n  this.CIRCLE_PERCENT_Y = options.indicator_percent_y || 0.9;\n  this.BKG_COLOR = options.bkg_color || 0x000000;\n  this.scale = options.scale || this.SCALES.FIT;\n\n  this.has_indicators = options.has_indicators || true;\n  this.speed = this.WIDTH / this.SLIDE_DURATION;\n  this.is_accelerated = options.is_accelerated || false;\n  this.initial_speed = this.is_accelerated ? (2 * this.WIDTH / this.SLIDE_DURATION) : this.speed;\n  this.acceleration = this.is_accelerated ? (this.initial_speed / this.SLIDE_DURATION) : 0;\n\n  this.is_auto_slide = options.is_auto_slide || false;\n  this.interval = options.interval || 1000;\n\n  this.zoom_ratio = options.zoom_ratio || 2;\n  this.zoom_interval = options.zoom_interval || 300;\n\n  this.states = {\n    still: {duration: null},\n    sliding_left: {duration: this.SLIDE_DURATION},\n    sliding_right: {duration: this.SLIDE_DURATION},\n    zoomming_in: {},\n    zoomming_out: {},\n    inspecting: {}\n  };\n  this.state = this.states.still;\n  this.state_time = 0;\n  this.slides = [];\n  this.slide_count = 0;\n  this.indicators = [];\n\n  this.is_position_adjusted = false;\n\n  this.onInit = options.onInit || null;\n  this.onSlideBegin = options.onSlideBegin || null;\n  this.onSlideEnd = options.onSlideEnd || null;\n}\n\nSlideManagerBase.prototype.getZoomedLength = function (length_cached, state_time) {\n  return 0.37 * length_cached * Math.log(state_time + (1 + Math.sqrt(1 + 4 * this.zoom_interval)) / 2);\n};\n\nSlideManagerBase.prototype.zoomIn = function () {\n  if (this.state !== this.states.still) {\n    return;\n  }\n  this.state = this.states.zoomming_in;\n  this.state_time = 0;\n  var slide = this.getActiveSlide();\n  if (slide) {\n    slide.cache_position();\n    slide.saveTempPosition();\n    slide.cache_size();\n  }\n};\n\nSlideManagerBase.prototype.zoomOut = function () {\n  if (this.state !== this.states.inspecting) {\n    return;\n  }\n  var slide = this.getActiveSlide();\n  if (slide) {\n    slide.restoreCachedPosition();\n  }\n  this.state = this.states.zoomming_out;\n  this.state_time = 0;\n};\n\nSlideManagerBase.prototype.update = function (dt) {\n  Director.prototype.update.call(this, dt);\n  if (this.slide_count < 2) {\n    return;\n  }\n\n  this.state_time += dt;\n  switch (this.state) {\n    case this.states.still:\n      if (this.is_auto_slide === true && this.state_time > this.interval) {\n        this.slideLeft();\n      }\n      break;\n    case this.states.zoomming_in:\n      if (this.state_time > this.zoom_interval) {\n        this.state = this.states.inspecting;\n        this.state_time = 0;\n      } else {\n        var slide = this.getActiveSlide();\n        slide.width = this.getZoomedLength(slide.width_cached, this.state_time);\n        slide.height = this.getZoomedLength(slide.height_cached, this.state_time);\n      }\n      break;\n    case this.states.zoomming_out:\n      var slide = this.getActiveSlide();\n      if (this.state_time > this.zoom_interval) {\n        this.state = this.states.still;\n        this.state_time = 0;\n        slide.width = slide.width_cached;\n        slide.height = slide.height_cached;\n      } else {\n        slide.width = 3 * slide.width_cached - this.getZoomedLength(slide.width_cached, this.state_time);\n        slide.height = 3 * slide.height_cached - this.getZoomedLength(slide.height_cached, this.state_time);\n      }\n      break;\n    case this.states.inspecting:\n    default:\n      // sliding\n      if (this.state_time > this.state.duration) {\n//      this.is_position_adjusted = false;\n//      this.adjustPosition();\n        // sliding finished\n        if (this.onSlideEnd) {\n          this.onSlideEnd();\n        }\n        var active_slide = this.getActiveSlide();\n        var offset = this.WIDTH / 2 - active_slide.position.x;\n        for (var i = 0; i < this.slide_count; i++) {\n          this.slides[i].position.x += offset;\n        }\n        this.state = this.states.still;\n        this.state_time = this.state_time - this.state.duration;\n        this.adjustCircles();\n      } else {\n        // sliding not finished\n        switch (this.state) {\n          case this.states.sliding_left:\n            this.updateSliding();\n            break;\n          case this.states.sliding_right:\n            this.updateSliding();\n            break;\n          default:\n            break;\n        }\n        this.adjustPosition();\n      }\n      break;\n  }\n};\n\nSlideManagerBase.prototype.updateSliding = function () {\n  var sign = this.state === this.states.sliding_left ? -1 : 1;\n  for (var i = 0; i < this.slide_count; i++) {\n    var delta_s = this.initial_speed * this.state_time - 0.5 * this.acceleration * Math.pow(this.state_time, 2);\n    this.slides[i].position.x = this.slides[i].cached_position.x + sign * delta_s;\n  }\n};\n\nSlideManagerBase.prototype.getSpeed = function () {\n  if (this.state === this.states.still) {\n    return 0;\n  }\n\n  if (this.is_accelerated) {\n    return this.initial_speed - this.acceleration * this.state_time;\n  } else {\n    return this.initial_speed;\n  }\n};\n\nSlideManagerBase.prototype.getActiveSlide = function () {\n  // the nearest slide\n  if (!this.slides.length) {\n    return false;\n  }\n  var slide = this.slides.reduce(function (s1, s2) {\n    return Math.abs(s1.position.x - this.WIDTH / 2) < Math.abs(s2.position.x - this.WIDTH / 2) ? s1 : s2;\n  }.bind(this));\n  return slide;\n};\n\nSlideManagerBase.prototype.getActiveIndex = function () {\n  if (!this.slides.length) {\n    return false;\n  }\n  // the nearest slide\n  return this.slides.indexOf(this.getActiveSlide());\n};\n\nSlideManagerBase.prototype.adjustCircles = function () {\n  var active_index = this.slides.indexOf(this.getActiveSlide());\n  for (var i = 0, len = this.indicators.length; i < len; i++) {\n    this.indicators[i].color = this.CIRCLE_COLOR;\n    this.indicators[i].fillAlpha = this.CIRCLE_FILLALPHA;\n  }\n  this.indicators[active_index].color = this.CIRCLE_COLOR_ACTIVE;\n  this.indicators[active_index].fillAlpha = this.CIRCLE_FILLALPHA_ACTIVE;\n};\n\nSlideManagerBase.prototype.adjustPosition = function () {\n  if (this.is_position_adjusted) {\n    return;\n  }\n  var left_slide = this.slides.reduce(function (s1, s2) {\n    return s1.position.x < s2.position.x ? s1 : s2;\n  }.bind(this));\n  var right_slide = this.slides.reduce(function (s1, s2) {\n    return s1.position.x > s2.position.x ? s1 : s2;\n  }.bind(this));\n  if (this.state === this.states.sliding_left && left_slide.position.x < this.WIDTH / 2 && left_slide !== this.getActiveSlide()) {\n    left_slide.position.x = right_slide.position.x + this.WIDTH;\n    left_slide.cached_position.x = right_slide.cached_position.x + this.WIDTH;\n  } else if (this.state === this.states.sliding_right && right_slide.position.x > this.WIDTH / 2 && right_slide !== this.getActiveSlide()) {\n    right_slide.position.x = left_slide.position.x - this.WIDTH;\n    right_slide.cached_position.x = left_slide.cached_position.x - this.WIDTH;\n  }\n  this.is_position_adjusted = true;\n};\n\nSlideManagerBase.prototype.slideLeft = function () {\n  if (this.state !== this.states.still) {\n    return;\n  }\n  if (this.onSlideBegin) {\n    this.onSlideBegin();\n  }\n  this.is_position_adjusted = false;\n  this.cache_slide_positions();\n  this.state = this.states.sliding_left;\n  this.state_time = 0;\n};\n\nSlideManagerBase.prototype.slideRight = function () {\n  if (this.state !== this.states.still) {\n    return;\n  }\n  if (this.onSlideBegin) {\n    this.onSlideBegin();\n  }\n  this.is_position_adjusted = false;\n  this.cache_slide_positions();\n  this.state = this.states.sliding_right;\n  this.state_time = 0;\n};\n\nSlideManagerBase.prototype.panTo = function (x, y) {\n  if (this.state !== this.states.inspecting) {\n    return;\n  }\n  var slide = this.getActiveSlide();\n  if (slide) {\n    if (x - 0.5 * slide.width >= 0 || x + 0.5 * slide.width <= this.WIDTH) {\n    } else {\n      slide.position.x = x;\n    }\n    if (y - 0.5 * slide.height >= 0 || y + 0.5 * slide.height <= this.HEIGHT) {\n    } else {\n      slide.position.y = y;\n    }\n  }\n};\n\nSlideManagerBase.prototype.startAutoSlide = function (interval) {\n  this.interval = interval || this.interval;\n  this.is_auto_slide = true;\n};\n\nSlideManagerBase.prototype.stopAutoSlide = function () {\n  this.is_auto_slide = false;\n};\n\nSlideManagerBase.prototype.cache_slide_positions = function () {\n  for (var i = 0; i < this.slide_count; i++) {\n    this.slides[i].cache_position();\n  }\n};\n\nSlideManagerBase.prototype.setSlidesAndStart = function (img_srcs, options) {\n  this.setSlides(img_srcs, options);\n  this.init();\n  this.animate();\n};\n\nSlideManagerBase.prototype.setSlides = function (img_srcs, options) {\n  options = options || {};\n  var width = options.width || this.WIDTH;\n  var height = options.height || this.HEIGHT;\n  this.slide_count = img_srcs.length;\n  for (var i = 0; i < this.slide_count; i++) {\n    if (typeof (img_srcs[i]) === 'string') {\n      this.slides.push(new Slide(width, height, img_srcs[i], null));\n    } else {\n      this.slides.push(new Slide(width, height, null, img_srcs[i]));\n    }\n  }\n};\n\nSlideManagerBase.prototype.init = function () {\n  // position slides and indicators\n  var len = this.slide_count;\n  var left_indicator_x = this.WIDTH / 2 - (len - 1) * this.CIRCLE_MARGIN / 2;\n  for (var i = 0; i < len; i++) {\n    var slide = this.slides[i];\n\n//    slide.width = this.WIDTH;\n//    slide.height = this.HEIGHT;\n    slide.anchor.x = 0.5;\n    slide.anchor.y = 0.5;\n    slide.position.x = this.WIDTH / 2 + i * this.WIDTH;\n    slide.position.y = this.HEIGHT * this.SLIDE_PERCENT_Y;\n\n    switch (this.scale) {\n      case this.SCALES.STRETCH:\n        slide.width = this.WIDTH;\n        slide.height = this.HEIGHT;\n        slide.position.y = this.HEIGHT * 0.5;\n      case this.SCALES.FIT:\n        var aspRatio = slide.width / slide.height;\n        if (aspRatio > this.WIDTH / this.HEIGHT) {\n          slide.width = this.WIDTH;\n          slide.height = slide.width / aspRatio;\n        } else {\n          slide.height = this.HEIGHT;\n          slide.width = slide.height * aspRatio;\n        }\n      case this.SCALES.CROP:\n      default:\n    }\n\n    var indicator = new Circle({\n      radius: this.CIRCLE_RADIUS,\n      position: {x: left_indicator_x + this.CIRCLE_MARGIN * i, y: this.HEIGHT * this.CIRCLE_PERCENT_Y},\n      color: i === 0 ? this.CIRCLE_COLOR_ACTIVE : this.CIRCLE_COLOR,\n      fillAlpha: i === 0 ? this.CIRCLE_FILLALPHA_ACTIVE : this.CIRCLE_FILLALPHA,\n    });\n    this.indicators.push(indicator);\n  }\n  if (this.onInit) {\n    this.onInit();\n  }\n};\n\nSlideManagerBase.prototype.SCALES = {\n  CROP: {},\n  STRETCH: {},\n  FIT: {}\n};","SlideManager.prototype = Object.create(SlideManagerBase.prototype);\n\nfunction SlideManager(width, height, options) {\n  SlideManagerBase.call(this, width, height, options);\n  this.textures = [];\n  this.sprites = [];\n  this.graphics = new PIXI.Graphics();\n//  this.stage = new PIXI.Stage(this.BKG_COLOR);   // pixi 2\n  this.stage = new PIXI.Container();\n//  this.renderer = new PIXI.CanvasRenderer(width, height, {view: options.view}, true);\n  this.renderer = PIXI.autoDetectRenderer(width, height, {view: options.view, backgroundColor: this.BKG_COLOR});   // pixi 3\n\n  this.hammertime = new Hammer(options.view);\n  this.hammertime.get('swipe').set({direction: Hammer.DIRECTION_HORIZONTAL});\n  this.hammertime.get('pan').set({direction: Hammer.DIRECTION_HORIZONTAL, threshold: 100});\n}\n\nSlideManager.prototype.render = function () {\n//  SlideManagerBase.prototype.render.call(this);\n  if (this.has_indicators) {\n    this.renderIndicators();\n  }\n  for (var i = 0, len = this.slide_count; i < len; i++) {\n    var sl = this.slides[i];\n    var sp = this.sprites[i];\n    sp.width = sl.width;\n    sp.height = sl.height;\n  }\n  this.renderer.render(this.stage);\n};\n\nSlideManager.prototype.renderIndicators = function () {\n  this.graphics.clear();\n  var len = this.indicators.length;\n  if (len > 1) {\n    for (var i = 0; i < len; i++) {\n      var cir = this.indicators[i];\n      this.graphics.beginFill(cir.color);\n      this.graphics.fillAlpha = cir.fillAlpha;\n      this.graphics.drawCircle(cir.position.x, cir.position.y, cir.radius);\n      this.graphics.endFill();\n    }\n  }\n};\n\nSlideManager.prototype.init = function () {\n  SlideManagerBase.prototype.init.call(this);\n  for (var i = 0, len = this.slide_count; i < len; i++) {\n    var sl = this.slides[i];\n    if (sl.img) {\n      var basetex = new PIXI.BaseTexture(sl.img);\n      var tex = new PIXI.Texture(basetex);\n    } else {\n      var tex = PIXI.Texture.fromImage(sl.img_src);\n    }\n    this.textures.push(tex);\n    var sp = new PIXI.Sprite(tex);\n    sp.width = sl.width;\n    sp.height = sl.height;\n    sp.anchor = sl.anchor;\n    sp.position = sl.position;\n    this.sprites.push(sp);\n    this.stage.addChild(sp);\n\n    if (this.has_indicators) {\n      var cir = this.indicators[i];\n      this.graphics.beginFill(0xFFFFFF);\n      this.graphics.fillAlpha = cir.fillAlpha;\n      this.graphics.drawCircle(cir.position.x, cir.position.y, cir.radius);\n      this.graphics.endFill();\n    }\n    this.stage.addChild(this.graphics);\n  }\n  //this.graphics.lineStyle(0, 0x000000, 1);\n};\n\nSlideManager.prototype.enableSwipe = function () {\n  this.hammertime.on('swipeleft panleft', function (ev) {\n    this.slideLeft();\n  }.bind(this));\n  this.hammertime.on('swiperight panright', function (ev) {\n    this.slideRight();\n  }.bind(this));\n}\n\nSlideManager.prototype.enableZoom = function () {\n  this.hammertime.on('tap', function (ev) {\n    if (this.state === this.states.inspecting) {\n      this.hammertime.get('pan').set({direction: Hammer.DIRECTION_HORIZONTAL, threshold: 100});\n      this.zoomOut();\n    } else {\n      this.hammertime.get('pan').set({direction: Hammer.DIRECTION_ALL, threshold: 1});\n      this.zoomIn();\n    }\n  }.bind(this));\n  this.hammertime.on('pan', function (ev) {\n    var slide = this.getActiveSlide();\n    if (slide) {\n      if (this.state !== this.states.inspecting) {\n        return;\n      }\n      ev.preventDefault();\n      this.panTo(slide.temp_position.x + ev.deltaX, slide.temp_position.y + ev.deltaY);\n    }\n  }.bind(this));\n  this.hammertime.on('panend', function (ev) {\n    var slide = this.getActiveSlide();\n    if (slide) {\n      slide.saveTempPosition();\n    }\n  }.bind(this));\n};\n"],"sourceRoot":"/source/"}